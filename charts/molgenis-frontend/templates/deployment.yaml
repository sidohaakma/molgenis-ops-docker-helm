apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "frontend.fullname" . }}
  labels:
    app: {{ template "frontend.name" . }}
    chart: {{ template "frontend.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "frontend.name" . }}
      release: {{ .Release.Name }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: {{ template "frontend.name" . }}
        release: {{ .Release.Name }}
    spec:
      containers:
      {{- with .Values }}
        - name: frontend
          image: "{{ .image.repository }}/{{ .image.name }}:{{ .image.tag }}"
          imagePullPolicy: {{ .image.pullPolicy }}
          ports:
            - containerPort: {{ .service.port }}
          volumeMounts:
          - name: proxy-backend-config
            mountPath: /etc/nginx/conf.d/
            subPath: backend.conf
          {{- if .proxy.frontend.override }}
          - name: proxy-frontend-config
            mountPath: /etc/nginx/conf.frontend.d/
          {{- end }}
          resources:
{{ toYaml .resources | indent 12 }}
          livenessProbe:
            tcpSocket:
              port: 80
          readinessProbe:
            httpGet:
              path: {{ .readinessPath }}
              port: 80
      volumes:
        - name: proxy-backend-config
          configMap:
            name: {{ $.Release.Name }}-backend-config
        - name: proxy-frontend-config
          configMap:
            name: {{ $.Release.Name }}-frontend-config
      {{- end -}}

{{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
{{- end}}
